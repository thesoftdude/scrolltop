name: Auto Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build assets
      run: npm run build
    
    - name: Get current version
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "is_tag=true" >> $GITHUB_OUTPUT
        else
          CURRENT_VERSION=$(grep '"version"' composer.json | cut -d'"' -f4)
          echo "version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
          echo "is_tag=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Auto-increment version and create tag
      if: steps.get_version.outputs.is_tag == 'false'
      run: |
        CURRENT_VERSION=$(grep '"version"' composer.json | cut -d'"' -f4)
        IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
        
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
        echo "TAG_NAME=v${NEW_VERSION}" >> $GITHUB_ENV
        
        # Update composer.json
        sed -i "s/\"version\": \"${CURRENT_VERSION}\"/\"version\": \"${NEW_VERSION}\"/" composer.json
        
        # Commit and push version update
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add composer.json
        git commit -m "Auto-increment version to ${NEW_VERSION}" || exit 0
        git push
        
        # Create and push tag
        git tag "v${NEW_VERSION}"
        git push origin "v${NEW_VERSION}"
    
    - name: Update composer.json version from tag
      if: steps.get_version.outputs.is_tag == 'true'
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"${VERSION}\"/" composer.json
    
    - name: Commit and push changes
      if: steps.get_version.outputs.is_tag == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Auto-update version to ${GITHUB_REF#refs/tags/}" || exit 0
        git push
    
    - name: Create GitHub Release
      if: steps.get_version.outputs.is_tag == 'true' || env.NEW_VERSION != ''
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME != '' && env.TAG_NAME || github.ref_name }}
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 